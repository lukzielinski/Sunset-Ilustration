$haze: (
    1: (110px, 4px),
    2: (130px, 8px),
    3: (150px, 12px),
    4: (170px, 16px),
);
$mountain: (
    1: (-20%, #1f5cbf),
    2: (-17%, #3a6ec2),
    3: (-13%, #5681c7),
    4: (0, #92abd4),
);
$tree: (
    1: (-50px, 100px, 70px, 40px, #1f5cbf),
    2: (-20px, 200px, 50px, 28px, #1f5cbf),
    3: (-10px, 340px, 30px, 16px, #4176cc),
    4: (10px, 90px, 25px, 14px, #6a8fcc),
    5: (10px, 90px, 25px, 16px, #6a8fcc),
);

@mixin position($top: null, $right: null, $bottom: null, $left:null) {
    position: absolute;
    top: $top;
    right: $right;
    bottom: $bottom;
    left: $left;
}

@mixin triangle($height, $width, $color) {
    $halfWidth: $width / 2;
    width: 0;
    height: 0;
    border-style: solid;
    border-width: 0 $halfWidth $height $halfWidth;
    border-color: transparent transparent $color transparent;
}

* {
    // padding: 0;
    // margin: 0;
}

body {
    height: 100vh;
    background: radial-gradient(ellipse at bottom, #1b2735, #090a0f 100%);
    overflow: hidden;
    display: grid;
}

.container { 
    position: relative;
    height: 500px;
    width: 350px;
    background: #fff;
    box-shadow: 0 0 15px #808080;
    margin-top: 10%;
    margin-left: auto;
    margin-right: auto;
}

.painting {
    @include position();
    inset: 15px;
    background: #fbbd87;
    overflow: hidden;
}

.sun{
    @include position($top: 70px, $left: 30px);
    height: 200px;
    width: 200px;
    background: #db7e2c;
    border-radius: 50%;
}

@for $i from 1 through 4 {
    .mountain-#{$i} {
        $listItems: map-get($mountain, $i);
        @include position($left: -20%, $bottom: nth($listItems, 1));
        background: nth($listItems, 2);
        width: 150%;
        height: 200px;
        @if $i % 2 == 0 {
            transform: rotate(7deg);
        } @else {
            transform: rotate(-7deg);
        }
    }
    .tree-#{$i} {
        $listItems: map-get($tree, $i);
        @include position($top: nth($listItems, 1), $left: nth($listItems, 2));
        @include triangle(nth($listItems, 3), nth($listItems, 4), nth($listItems, 5));
        @if $i % 2 == 0 {
            transform: rotate(-7deg);
        } @else {
            transform: rotate(7deg);
        }
    }
    .haze-#{$i} {
        $listItems: map-get($haze, $i);
        width: 100%;
        background: #fbbd87;
        @include position($top: nth($listItems, 1));
        height: nth($listItems, 2);
    }
}
@function random_range($min, $max){
    $rand: random();
    $random_range: $min + floor($rand * ($max - $min) + 1);
    @return $random_range;
}

.snow {
    $total: 200;
    position: absolute;
    width: 10px;
    height: 10px;
    background: white;
    border-radius: 50%;

    @for $i from 1 through $total {
        $random-x: random(1000000) * 0.0001vw;
        $random-scale: random(10000) * 0.0001;
        $fall-duration: random_range(10, 30) * 1s;
        $fall-delay: random(30) * -1s;
        $random-time: random_range(30000, 80000) / 100000;
        $random-y: $random-time * 100vh;
        $random-offset: random_range(-100000,100000) * 0.0001vw;
        $random-x-end: $random-x + $random-offset;
        $random-x-end: $random-x + ($random-offset / 2);
        &:nth-child(#{$i}) {
            opacity: random(10000) * 0.0001;
            transform: translate($random-x, -10px) scale($random-scale);
            animation: fall-#{$i} $fall-duration $fall-delay linear infinite;
        }
        
        @keyframes fall-#{$i} {
            #{percentagle($random-time)} {
                transform: translate($random-x-end, $random-y) scale($random-scale);
            }

            to {
                transform: translate($random-x-end, 100vh) scale($random-scale);
            }
        }
    }
}